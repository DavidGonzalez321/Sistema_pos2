{"ast":null,"code":"import _regeneratorRuntime from \"C:/xampp/htdocs/pos/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/pos/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nvar RUTA_GLOBAL = \"http://localhost/pos/api/\";\nvar HttpService = {\n  registrar: function registrar(ruta, datos) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var respuesta, resultado;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(RUTA_GLOBAL + ruta, {\n                method: \"post\",\n                body: JSON.stringify(datos)\n              });\n\n            case 2:\n              respuesta = _context.sent;\n              _context.next = 5;\n              return respuesta.json();\n\n            case 5:\n              resultado = _context.sent;\n              return _context.abrupt(\"return\", resultado);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  obtener: function obtener(ruta) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var respuesta, resultado;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(RUTA_GLOBAL + ruta);\n\n            case 2:\n              respuesta = _context2.sent;\n              _context2.next = 5;\n              return respuesta.json();\n\n            case 5:\n              resultado = _context2.sent;\n              return _context2.abrupt(\"return\", resultado);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  editar: function editar(ruta, datos) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var respuesta, resultado;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch(RUTA_GLOBAL + ruta, {\n                method: \"post\",\n                body: JSON.stringify(datos)\n              });\n\n            case 2:\n              respuesta = _context3.sent;\n              _context3.next = 5;\n              return respuesta.json();\n\n            case 5:\n              resultado = _context3.sent;\n              return _context3.abrupt(\"return\", resultado);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  eliminar: function eliminar(ruta, datos) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      var respuesta, resultado;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fetch(RUTA_GLOBAL + ruta, {\n                method: \"post\",\n                body: JSON.stringify(datos)\n              });\n\n            case 2:\n              respuesta = _context4.sent;\n              _context4.next = 5;\n              return respuesta.json();\n\n            case 5:\n              resultado = _context4.sent;\n              return _context4.abrupt(\"return\", resultado);\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  obtenerConConsultas: function obtenerConConsultas(ruta, payload) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var respuesta, resultado;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return fetch(RUTA_GLOBAL + ruta, {\n                method: \"post\",\n                body: JSON.stringify(payload)\n              });\n\n            case 2:\n              respuesta = _context5.sent;\n              _context5.next = 5;\n              return respuesta.json();\n\n            case 5:\n              resultado = _context5.sent;\n              return _context5.abrupt(\"return\", resultado);\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  },\n  obtenerDatosNegocio: function obtenerDatosNegocio() {\n    return this.obtener(\"configuracion/obtener_datos.php\");\n  }\n};\nexport default HttpService;","map":{"version":3,"names":["RUTA_GLOBAL","HttpService","registrar","ruta","datos","fetch","method","body","JSON","stringify","respuesta","json","resultado","obtener","editar","eliminar","obtenerConConsultas","payload","obtenerDatosNegocio"],"sources":["C:/xampp/htdocs/pos/src/Servicios/HttpService.js"],"sourcesContent":["const  RUTA_GLOBAL = \"http://localhost/pos/api/\"\r\nconst HttpService =  {\r\n\tasync registrar(ruta, datos) {\r\n\t\tlet respuesta = await fetch(RUTA_GLOBAL + ruta, {\r\n\t\t\tmethod: \"post\",\t\t\t\t\r\n\t\t\tbody: JSON.stringify(datos),\r\n\t\t});\r\n\t\tlet resultado = await respuesta.json()\r\n\t\treturn resultado\r\n\t},\r\n\r\n\tasync obtener(ruta) {\r\n\t\tlet respuesta = await fetch(RUTA_GLOBAL + ruta)\r\n\t\tlet resultado = await respuesta.json()\r\n\t\treturn resultado\r\n\t},\r\n\r\n\tasync editar(ruta, datos) {\r\n\t\tlet respuesta = await fetch(RUTA_GLOBAL + ruta, {\r\n\t\t\tmethod: \"post\",\t\t\t\t\r\n\t\t\tbody: JSON.stringify(datos),\r\n\t\t});\r\n\t\tlet resultado = await respuesta.json()\r\n\t\treturn resultado\r\n\t},\r\n\r\n\tasync eliminar(ruta, datos) {\r\n\t\tlet respuesta = await fetch(RUTA_GLOBAL + ruta, {\r\n\t\t\tmethod: \"post\",\t\t\t\t\r\n\t\t\tbody: JSON.stringify(datos),\r\n\t\t});\r\n\t\tlet resultado = await respuesta.json()\r\n\t\treturn resultado\r\n\t},\r\n\r\n\tasync obtenerConConsultas(ruta, payload){\r\n\t\tlet respuesta = await fetch(RUTA_GLOBAL + ruta, {\r\n\t\t\tmethod: \"post\",\t\t\t\t\r\n\t\t\tbody: JSON.stringify(payload),\r\n\t\t});\r\n\t\tlet resultado = await respuesta.json()\r\n\t\treturn resultado\r\n\t},\r\n\r\n\tobtenerDatosNegocio(){\r\n\t\treturn this.obtener(\"configuracion/obtener_datos.php\")\r\n\t}\r\n}\r\n\r\nexport default HttpService"],"mappings":";;;;AAAA,IAAOA,WAAW,GAAG,2BAArB;AACA,IAAMC,WAAW,GAAI;EACdC,SADc,qBACJC,IADI,EACEC,KADF,EACS;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACNC,KAAK,CAACL,WAAW,GAAGG,IAAf,EAAqB;gBAC/CG,MAAM,EAAE,MADuC;gBAE/CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;cAFyC,CAArB,CADC;;YAAA;cACxBM,SADwB;cAAA;cAAA,OAKNA,SAAS,CAACC,IAAV,EALM;;YAAA;cAKxBC,SALwB;cAAA,iCAMrBA,SANqB;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAO5B,CARmB;EAUdC,OAVc,mBAUNV,IAVM,EAUA;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACGE,KAAK,CAACL,WAAW,GAAGG,IAAf,CADR;;YAAA;cACfO,SADe;cAAA;cAAA,OAEGA,SAAS,CAACC,IAAV,EAFH;;YAAA;cAEfC,SAFe;cAAA,kCAGZA,SAHY;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAInB,CAdmB;EAgBdE,MAhBc,kBAgBPX,IAhBO,EAgBDC,KAhBC,EAgBM;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACHC,KAAK,CAACL,WAAW,GAAGG,IAAf,EAAqB;gBAC/CG,MAAM,EAAE,MADuC;gBAE/CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;cAFyC,CAArB,CADF;;YAAA;cACrBM,SADqB;cAAA;cAAA,OAKHA,SAAS,CAACC,IAAV,EALG;;YAAA;cAKrBC,SALqB;cAAA,kCAMlBA,SANkB;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAOzB,CAvBmB;EAyBdG,QAzBc,oBAyBLZ,IAzBK,EAyBCC,KAzBD,EAyBQ;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACLC,KAAK,CAACL,WAAW,GAAGG,IAAf,EAAqB;gBAC/CG,MAAM,EAAE,MADuC;gBAE/CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;cAFyC,CAArB,CADA;;YAAA;cACvBM,SADuB;cAAA;cAAA,OAKLA,SAAS,CAACC,IAAV,EALK;;YAAA;cAKvBC,SALuB;cAAA,kCAMpBA,SANoB;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAO3B,CAhCmB;EAkCdI,mBAlCc,+BAkCMb,IAlCN,EAkCYc,OAlCZ,EAkCoB;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACjBZ,KAAK,CAACL,WAAW,GAAGG,IAAf,EAAqB;gBAC/CG,MAAM,EAAE,MADuC;gBAE/CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeQ,OAAf;cAFyC,CAArB,CADY;;YAAA;cACnCP,SADmC;cAAA;cAAA,OAKjBA,SAAS,CAACC,IAAV,EALiB;;YAAA;cAKnCC,SALmC;cAAA,kCAMhCA,SANgC;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAOvC,CAzCmB;EA2CpBM,mBA3CoB,iCA2CC;IACpB,OAAO,KAAKL,OAAL,CAAa,iCAAb,CAAP;EACA;AA7CmB,CAArB;AAgDA,eAAeZ,WAAf"},"metadata":{},"sourceType":"module"}