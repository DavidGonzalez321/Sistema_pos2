{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BuscarProducto from '../Inventario/BuscarProducto.vue';\nimport TablaProductos from './TablaProductos.vue';\nimport DialogoTerminarVenta from './DialogoTerminarVenta';\nimport DialogoAgregarCuenta from './DialogoAgregarCuenta';\nimport DialogoAgregarApartado from './DialogoAgregarApartado';\nimport DialogoCotizar from './DialogoCotizar';\nimport ComprobanteCompra from './ComprobanteCompra';\nimport MensajeInicial from '../Extras/MensajeInicial';\nimport AyudanteSesion from '../../Servicios/AyudanteSesion';\nimport HttpService from '../../Servicios/HttpService';\nexport default {\n  name: \"RealizarVenta\",\n  components: {\n    BuscarProducto: BuscarProducto,\n    TablaProductos: TablaProductos,\n    DialogoTerminarVenta: DialogoTerminarVenta,\n    DialogoAgregarCuenta: DialogoAgregarCuenta,\n    DialogoAgregarApartado: DialogoAgregarApartado,\n    DialogoCotizar: DialogoCotizar,\n    MensajeInicial: MensajeInicial,\n    ComprobanteCompra: ComprobanteCompra\n  },\n  data: function data() {\n    return {\n      cargando: false,\n      productos: [],\n      total: 0,\n      mostrarDialogo: false,\n      mostrarTerminarVenta: false,\n      mostrarAgregarCuenta: false,\n      mostrarAgregarApartado: false,\n      mostrarRegistrarCotizacion: false,\n      ventaRealizada: null,\n      mostrarComprobante: false,\n      tipoVenta: \"\"\n    };\n  },\n  methods: {\n    onImpreso: function onImpreso(resultado) {\n      this.mostrarComprobante = resultado;\n    },\n    onTerminar: function onTerminar(venta) {\n      var _this = this;\n\n      this.ventaRealizada = {\n        total: this.total,\n        productos: this.productos,\n        cliente: venta.cliente.id,\n        usuario: AyudanteSesion.obtenerDatosSesion().id,\n        nombreCliente: venta.cliente.nombre ? venta.cliente.nombre : 'MOSTRADOR',\n        nombreUsuario: AyudanteSesion.obtenerDatosSesion().usuario,\n        fecha: new Date().toJSON().slice(0, 10).replace(/-/g, '/')\n      };\n      var tipo = venta.tipo;\n\n      switch (tipo) {\n        case 'venta':\n          this.ventaRealizada.tipo = 'venta';\n          this.ventaRealizada.pagado = venta.pagado;\n          this.ventaRealizada.cambio = venta.cambio;\n          console.log(this.ventaRealizada);\n          break;\n\n        case 'cuenta':\n          this.ventaRealizada.tipo = 'cuenta';\n          this.ventaRealizada.pagado = venta.pagado;\n          this.ventaRealizada.porPagar = venta.porPagar;\n          console.log(this.ventaRealizada);\n          break;\n\n        case 'apartado':\n          this.ventaRealizada.tipo = 'apartado';\n          this.ventaRealizada.pagado = venta.pagado;\n          this.ventaRealizada.porPagar = venta.porPagar;\n          console.log(this.ventaRealizada);\n          break;\n\n        case 'cotiza':\n          this.ventaRealizada.tipo = 'cotiza';\n          console.log(this.ventaRealizada);\n          break;\n      }\n\n      this.tipoVenta = venta.tipo;\n      this.cargando = true;\n      var datos = {\n        accion: 'vender',\n        datos: this.ventaRealizada\n      };\n      HttpService.registrar('vender.php', datos).then(function (registrado) {\n        console.log(registrado);\n\n        if (registrado) {\n          _this.productos = [];\n          _this.total = 0;\n          _this.cargando = false;\n          _this.mostrarTerminarVenta = _this.mostrarAgregarCuenta = _this.mostrarAgregarApartado = _this.mostrarRegistrarCotizacion = false;\n          _this.mostrarDialogo = false;\n\n          _this.$buefy.toast.open({\n            type: 'is-info',\n            message: tipo.toUpperCase() + ' registrado con éxito'\n          });\n\n          _this.mostrarComprobante = true;\n        }\n      });\n    },\n    cancelarVenta: function cancelarVenta() {\n      var _this2 = this;\n\n      this.$buefy.dialog.confirm({\n        title: 'Cancelar venta',\n        message: '¿Seguro que deseas cancelar la venta?',\n        confirmText: 'Sí, cancelar',\n        cancelText: 'No, continuar',\n        type: 'is-danger',\n        hasIcon: true,\n        onConfirm: function onConfirm() {\n          _this2.productos = [];\n          _this2.total = 0;\n\n          _this2.$buefy.toast.open('Venta cancelada');\n        }\n      });\n    },\n    abrirDialogo: function abrirDialogo(opcion) {\n      this.mostrarDialogo = true;\n\n      switch (opcion) {\n        case \"venta\":\n          this.mostrarTerminarVenta = true;\n          this.mostrarAgregarCuenta = this.mostrarAgregarApartado = this.mostrarRegistrarCotizacion = false;\n          break;\n\n        case \"cuenta\":\n          this.mostrarAgregarCuenta = true;\n          this.mostrarTerminarVenta = this.mostrarAgregarApartado = this.mostrarRegistrarCotizacion = false;\n          break;\n\n        case \"apartado\":\n          this.mostrarAgregarApartado = true;\n          this.mostrarAgregarCuenta = this.mostrarTerminarVenta = this.mostrarRegistrarCotizacion = false;\n          break;\n\n        case \"cotiza\":\n          this.mostrarRegistrarCotizacion = true;\n          this.mostrarAgregarCuenta = this.mostrarTerminarVenta = this.mostrarAgregarApartado = false;\n          break;\n      }\n    },\n    onCerrar: function onCerrar(opcion) {\n      this.mostrarDialogo = false;\n      if (opcion === 'venta' || opcion === 'cuenta' || opcion === 'apartado' || opcion === 'cotiza') this.mostrarTerminarVenta = this.mostrarAgregarCuenta = this.mostrarAgregarApartado = this.mostrarRegistrarCotizacion = false;\n    },\n    onQuitar: function onQuitar(id) {\n      var indice = this.productos.findIndex(function (producto) {\n        return producto.id === id;\n      });\n      this.productos.splice(indice, 1);\n    },\n    onAumentar: function onAumentar(producto) {\n      var verificaExistencia = this.verificarExistenciaAlcanzada(producto.existencia, producto.id);\n      if (verificaExistencia) return;\n\n      if (producto.vendidoMayoreo) {\n        this.verificarMayoreo(producto.cantidadMayoreo, producto.id, producto.precioMayoreo);\n      }\n\n      this.total = this.calcularTotal();\n    },\n    onSeleccionado: function onSeleccionado(producto) {\n      var verificaExistencia = this.verificarExistenciaAlcanzada(producto.existencia, producto.id);\n      if (verificaExistencia) return;\n      console.log(producto);\n\n      if (producto.vendidoMayoreo) {\n        this.verificarMayoreo(producto.cantidadMayoreo, producto.id, producto.precioMayoreo);\n      }\n\n      var existeEnLista = this.verificarSiEstaEnLista(producto.id);\n\n      if (existeEnLista >= 0) {\n        this.aumentarCantidad(existeEnLista);\n        this.total = this.calcularTotal();\n        return;\n      }\n\n      this.agregarALista(producto);\n      this.total = this.calcularTotal();\n    },\n    agregarALista: function agregarALista(producto) {\n      this.productos.push({\n        id: producto.id,\n        codigo: producto.codigo,\n        nombre: producto.nombre,\n        precio: producto.precioVenta,\n        cantidad: 1,\n        existencia: producto.existencia,\n        vendidoMayoreo: producto.vendidoMayoreo,\n        cantidadMayoreo: producto.cantidadMayoreo,\n        precioMayoreo: producto.precioMayoreo,\n        mayoreoAplicado: false\n      });\n    },\n    verificarExistenciaAlcanzada: function verificarExistenciaAlcanzada(existencia, id) {\n      var _this3 = this;\n\n      var resultado = false;\n      this.productos.forEach(function (producto) {\n        if (producto.id === id) {\n          if (parseInt(producto.cantidad) >= parseInt(existencia)) {\n            _this3.$buefy.toast.open({\n              type: 'is-danger',\n              message: 'El producto ' + producto.nombre + 'ha alcanzado la existencia máxima. Solo tienes ' + producto.existencia\n            });\n\n            producto.cantidad = existencia;\n            resultado = true;\n          }\n        }\n      });\n      return resultado;\n    },\n    verificarMayoreo: function verificarMayoreo(cantidadMayoreo, id, precioMayoreo) {\n      var _this4 = this;\n\n      this.productos.forEach(function (producto) {\n        if (producto.mayoreoAplicado) return;\n\n        if (producto.id === id) {\n          if (producto.cantidad >= parseInt(cantidadMayoreo)) {\n            _this4.$buefy.dialog.confirm({\n              confirmText: 'Sí, aplicar',\n              cancelText: 'No aplicar',\n              message: 'El producto ' + producto.nombre + ' tiene mayoreo a partir de ' + cantidadMayoreo + ' piezas, ¿Desea aplicar el mayoreo?',\n              onConfirm: function onConfirm() {\n                producto.precio = precioMayoreo;\n                producto.mayoreoAplicado = true;\n\n                _this4.$buefy.toast.open('Mayoreo aplicado correctamente a ' + producto.nombre);\n              }\n            });\n          }\n        }\n      });\n    },\n    verificarSiEstaEnLista: function verificarSiEstaEnLista(id) {\n      return this.productos.findIndex(function (producto) {\n        return producto.id === id;\n      });\n    },\n    aumentarCantidad: function aumentarCantidad(indice) {\n      var lista = this.productos;\n      var producto = lista[indice];\n      producto.cantidad++;\n      this.productos = lista;\n    },\n    calcularTotal: function calcularTotal() {\n      var total = 0;\n      this.productos.forEach(function (producto) {\n        total = parseFloat(producto.cantidad * producto.precio) + parseFloat(total);\n      });\n      return total;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","components","BuscarProducto","TablaProductos","DialogoTerminarVenta","DialogoAgregarCuenta","DialogoAgregarApartado","DialogoCotizar","MensajeInicial","ComprobanteCompra","data","cargando","productos","total","mostrarDialogo","mostrarTerminarVenta","mostrarAgregarCuenta","mostrarAgregarApartado","mostrarRegistrarCotizacion","ventaRealizada","mostrarComprobante","tipoVenta","methods","onImpreso","resultado","onTerminar","venta","cliente","usuario","nombreCliente","nombreUsuario","fecha","console","accion","datos","HttpService","then","type","message","cancelarVenta","title","confirmText","cancelText","hasIcon","onConfirm","abrirDialogo","opcion","onCerrar","onQuitar","id","onAumentar","producto","onSeleccionado","agregarALista","codigo","nombre","precio","cantidad","existencia","vendidoMayoreo","cantidadMayoreo","precioMayoreo","mayoreoAplicado","verificarExistenciaAlcanzada","verificarMayoreo","verificarSiEstaEnLista","aumentarCantidad","indice","calcularTotal"],"sourceRoot":"src/components/Ventas","sources":["RealizarVenta.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <buscar-producto @seleccionado=\"onSeleccionado\" />\r\n    <mensaje-inicial :titulo=\"'No has agregado productos'\" :subtitulo=\"'Agrega algunos productos a la lista para venderlos :)'\" v-if=\"productos.length<1\"/>\r\n    <div v-if=\"productos.length>0\">\r\n      <tabla-productos :listaProductos=\"productos\" @quitar=\"onQuitar\" @aumentar=\"onAumentar\"  />\r\n      <div class=\"notification is-primary mt-3\">\r\n        <p class=\" has-text-weight-bold has-text-centered\" style=\"font-size:5em\">\r\n          Total ${{ total }}\r\n        </p>\r\n        <nav class=\"level mt-2\">\r\n          <div class=\"level-item has-text-centered\">\r\n           <b-button class=\"button is-responsive\" type=\"is-success\" inverted  icon-left=\"check\" size=\"is-large\" @click=\" abrirDialogo('venta') \">\r\n            Terminar venta\r\n          </b-button>\r\n        </div>\r\n        <div class=\"level-item has-text-centered\">\r\n         <b-button class=\"button is-responsive\" type=\"is-info\" inverted  icon-left=\"wallet-plus\" size=\"is-large\" @click=\" abrirDialogo('cuenta') \">\r\n          Agregar a cuenta\r\n        </b-button>\r\n      </div>\r\n      <div class=\"level-item has-text-centered\">\r\n        <b-button class=\"button is-responsive\" type=\"is-dark\" inverted  icon-left=\"wallet-travel\" size=\"is-large\" @click=\" abrirDialogo('apartado') \">\r\n          Realizar apartado\r\n        </b-button>\r\n      </div>\r\n      <div class=\"level-item has-text-centered\">\r\n        <b-button class=\"button is-responsive\" type=\"is-danger\" inverted  icon-left=\"cancel\" size=\"is-large\" @click=\"cancelarVenta\">\r\n          Cancelar\r\n        </b-button>\r\n      </div>\r\n      <div class=\"level-item has-text-centered\">\r\n        <b-button class=\"button is-responsive\" type=\"is-warning\" inverted  icon-left=\"ticket-outline\" size=\"is-large\" @click=\"abrirDialogo('cotiza')\">\r\n          Cotizar\r\n        </b-button>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n</div>\r\n<b-loading :is-full-page=\"true\" v-model=\"cargando\" :can-cancel=\"false\"></b-loading>\r\n<b-modal\r\nv-model=\"mostrarDialogo\"\r\nhas-modal-card\r\ntrap-focus\r\n:destroy-on-hide=\"false\"\r\naria-role=\"dialog\"\r\naria-label=\"Modal Terminar Venta\"\r\nclose-button-aria-label=\"Close\"\r\naria-modal>\r\n<dialogo-terminar-venta :totalVenta=\"total\" @close=\"onCerrar\" @terminar=\"onTerminar\" v-if=\"mostrarTerminarVenta\"></dialogo-terminar-venta>\r\n<dialogo-agregar-cuenta :totalVenta=\"total\" @close=\"onCerrar\" @terminar=\"onTerminar\" v-if=\"mostrarAgregarCuenta\"></dialogo-agregar-cuenta>\r\n<dialogo-agregar-apartado :totalVenta=\"total\" @close=\"onCerrar\" @terminar=\"onTerminar\" v-if=\"mostrarAgregarApartado\"></dialogo-agregar-apartado>\r\n<dialogo-cotizar :totalVenta=\"total\" @close=\"onCerrar\" @terminar=\"onTerminar\" v-if=\"mostrarRegistrarCotizacion\"></dialogo-cotizar>\r\n</b-modal>\r\n<comprobante-compra :venta=\"this.ventaRealizada\" :tipo=\"tipoVenta\" @impreso=\"onImpreso\" v-if=\"mostrarComprobante\" />\r\n</section>\r\n</template>\r\n<script>\r\n  import BuscarProducto from '../Inventario/BuscarProducto.vue'\r\n  import TablaProductos from './TablaProductos.vue'\r\n  import DialogoTerminarVenta from './DialogoTerminarVenta'\r\n  import DialogoAgregarCuenta from './DialogoAgregarCuenta'\r\n  import DialogoAgregarApartado from './DialogoAgregarApartado'\r\n  import DialogoCotizar from './DialogoCotizar'\r\n  import ComprobanteCompra from './ComprobanteCompra'\r\n  import MensajeInicial from '../Extras/MensajeInicial'\r\n  import AyudanteSesion from '../../Servicios/AyudanteSesion'\r\n  import HttpService from '../../Servicios/HttpService'\r\n\r\n  export default{\r\n    name: \"RealizarVenta\",\r\n    components: { \r\n      BuscarProducto, \r\n      TablaProductos, \r\n      DialogoTerminarVenta, \r\n      DialogoAgregarCuenta,\r\n      DialogoAgregarApartado,\r\n      DialogoCotizar,\r\n      MensajeInicial,\r\n      ComprobanteCompra\r\n    },\r\n\r\n    data:()=>({\r\n      cargando: false,\r\n      productos: [],\r\n      total: 0,\r\n      mostrarDialogo: false,\r\n      mostrarTerminarVenta: false,\r\n      mostrarAgregarCuenta: false,\r\n      mostrarAgregarApartado: false,\r\n      mostrarRegistrarCotizacion: false,\r\n      ventaRealizada: null,\r\n      mostrarComprobante: false,\r\n      tipoVenta: \"\"\r\n    }),\r\n\r\n    methods: {\r\n      onImpreso(resultado){\r\n        this.mostrarComprobante = resultado\r\n      },\r\n\r\n      onTerminar(venta){\r\n        this.ventaRealizada = {\r\n          total: this.total,\r\n          productos: this.productos,\r\n          cliente: venta.cliente.id,\r\n          usuario: AyudanteSesion.obtenerDatosSesion().id,\r\n          nombreCliente: (venta.cliente.nombre) ? venta.cliente.nombre : 'MOSTRADOR',\r\n          nombreUsuario: AyudanteSesion.obtenerDatosSesion().usuario,\r\n          fecha: new Date().toJSON().slice(0,10).replace(/-/g,'/')\r\n        }\r\n\r\n        let tipo = venta.tipo\r\n\r\n        switch(tipo){\r\n          case 'venta':\r\n          this.ventaRealizada.tipo = 'venta'\r\n          this.ventaRealizada.pagado = venta.pagado\r\n          this.ventaRealizada.cambio = venta.cambio\r\n          console.log(this.ventaRealizada)\r\n          break\r\n          case 'cuenta' :\r\n          this.ventaRealizada.tipo = 'cuenta'\r\n          this.ventaRealizada.pagado = venta.pagado\r\n          this.ventaRealizada.porPagar = venta.porPagar\r\n          console.log(this.ventaRealizada)\r\n          break\r\n          case 'apartado' :\r\n          this.ventaRealizada.tipo = 'apartado'\r\n          this.ventaRealizada.pagado = venta.pagado\r\n          this.ventaRealizada.porPagar = venta.porPagar\r\n          console.log(this.ventaRealizada)\r\n          break\r\n          case 'cotiza' :\r\n          this.ventaRealizada.tipo = 'cotiza'\r\n          console.log(this.ventaRealizada)\r\n          break\r\n        }\r\n\r\n\r\n        this.tipoVenta = venta.tipo\r\n\r\n        this.cargando = true\r\n        let datos = {\r\n          accion: 'vender',\r\n          datos: this.ventaRealizada\r\n        }\r\n\r\n        HttpService.registrar('vender.php', datos)\r\n        .then(registrado => {\r\n          console.log(registrado)\r\n          if(registrado){\r\n            this.productos = []\r\n            this.total = 0\r\n            this.cargando = false\r\n            this.mostrarTerminarVenta = this.mostrarAgregarCuenta = this.mostrarAgregarApartado = this.mostrarRegistrarCotizacion = false\r\n            this.mostrarDialogo = false\r\n            this.$buefy.toast.open({\r\n              type: 'is-info',\r\n              message: tipo.toUpperCase() + ' registrado con éxito'\r\n            })\r\n            this.mostrarComprobante = true\r\n          }\r\n\r\n        })\r\n\r\n\r\n      },\r\n\r\n      cancelarVenta(){   \r\n        this.$buefy.dialog.confirm({\r\n          title: 'Cancelar venta',\r\n          message: '¿Seguro que deseas cancelar la venta?',\r\n          confirmText: 'Sí, cancelar',\r\n          cancelText: 'No, continuar',\r\n          type: 'is-danger',\r\n          hasIcon: true,\r\n          onConfirm: () => {\r\n            this.productos = []\r\n            this.total = 0\r\n            this.$buefy.toast.open('Venta cancelada')\r\n          }\r\n        })\r\n      },\r\n\r\n\r\n      abrirDialogo(opcion){\r\n        this.mostrarDialogo = true\r\n        switch (opcion){\r\n          case \"venta\":\r\n          this.mostrarTerminarVenta = true\r\n          this.mostrarAgregarCuenta =  this.mostrarAgregarApartado = this.mostrarRegistrarCotizacion = false\r\n          break\r\n          case \"cuenta\":\r\n          this.mostrarAgregarCuenta = true\r\n          this.mostrarTerminarVenta = this.mostrarAgregarApartado = this.mostrarRegistrarCotizacion = false\r\n          break\r\n          case \"apartado\":\r\n          this.mostrarAgregarApartado = true\r\n          this.mostrarAgregarCuenta = this.mostrarTerminarVenta = this.mostrarRegistrarCotizacion = false \r\n          break\r\n          case \"cotiza\":\r\n          this.mostrarRegistrarCotizacion = true\r\n          this.mostrarAgregarCuenta = this.mostrarTerminarVenta = this.mostrarAgregarApartado = false \r\n          break\r\n        }\r\n      },\r\n\r\n      onCerrar(opcion){\r\n        this.mostrarDialogo = false\r\n        if(opcion === 'venta' || opcion === 'cuenta' || opcion === 'apartado' || opcion === 'cotiza')\r\n          this.mostrarTerminarVenta = this.mostrarAgregarCuenta = this.mostrarAgregarApartado = this.mostrarRegistrarCotizacion = false\r\n      },\r\n\r\n      onQuitar(id){\r\n        let indice = this.productos.findIndex(producto => producto.id === id)\r\n        this.productos.splice(indice, 1)\r\n      },\r\n\r\n      onAumentar(producto){\r\n        let verificaExistencia = this.verificarExistenciaAlcanzada(producto.existencia, producto.id)\r\n\r\n        if(verificaExistencia) return\r\n\r\n          if(producto.vendidoMayoreo){\r\n            this.verificarMayoreo(producto.cantidadMayoreo, producto.id, producto.precioMayoreo)\r\n          }\r\n          this.total = this.calcularTotal()\r\n        },\r\n\r\n        onSeleccionado(producto){\r\n          let verificaExistencia = this.verificarExistenciaAlcanzada(producto.existencia, producto.id)\r\n\r\n          if(verificaExistencia) return\r\n\r\n            console.log(producto)\r\n          if(producto.vendidoMayoreo){\r\n            this.verificarMayoreo(producto.cantidadMayoreo, producto.id, producto.precioMayoreo)\r\n          }\r\n\r\n          let existeEnLista = this.verificarSiEstaEnLista(producto.id)\r\n\r\n          if(existeEnLista >= 0) {\r\n            this.aumentarCantidad(existeEnLista)\r\n            this.total = this.calcularTotal()\r\n            return\r\n          }\r\n\r\n          this.agregarALista(producto)\r\n          this.total = this.calcularTotal()\r\n        },\r\n\r\n        agregarALista(producto) {\r\n          this.productos.push(\r\n          {\r\n            id: producto.id,\r\n            codigo: producto.codigo,\r\n            nombre: producto.nombre,\r\n            precio: producto.precioVenta,\r\n            cantidad: 1,\r\n            existencia: producto.existencia,\r\n            vendidoMayoreo: producto.vendidoMayoreo,\r\n            cantidadMayoreo: producto.cantidadMayoreo,\r\n            precioMayoreo: producto.precioMayoreo,\r\n            mayoreoAplicado: false\r\n          }   \r\n          )\r\n        },\r\n\r\n        verificarExistenciaAlcanzada(existencia, id){\r\n          let resultado = false\r\n          this.productos.forEach(producto => {\r\n            if(producto.id === id){\r\n              if(parseInt(producto.cantidad) >= parseInt(existencia)){\r\n                this.$buefy.toast.open({\r\n                  type: 'is-danger',\r\n                  message: 'El producto ' + producto.nombre + 'ha alcanzado la existencia máxima. Solo tienes ' + producto.existencia\r\n                })\r\n                producto.cantidad = existencia\r\n                resultado = true\r\n              }\r\n            }\r\n\r\n          })\r\n          return resultado\r\n        },\r\n\r\n        verificarMayoreo(cantidadMayoreo, id, precioMayoreo) {\r\n\r\n          this.productos.forEach(producto => {\r\n            if(producto.mayoreoAplicado) return\r\n              if(producto.id === id) {\r\n                if(producto.cantidad >= parseInt(cantidadMayoreo)){\r\n                  this.$buefy.dialog.confirm({\r\n                    confirmText: 'Sí, aplicar',\r\n                    cancelText: 'No aplicar',\r\n                    message: 'El producto ' + producto.nombre + ' tiene mayoreo a partir de ' + cantidadMayoreo + ' piezas, ¿Desea aplicar el mayoreo?',\r\n                    onConfirm: () => {\r\n                      producto.precio = precioMayoreo\r\n                      producto.mayoreoAplicado = true\r\n                      this.$buefy.toast.open('Mayoreo aplicado correctamente a ' + producto.nombre)\r\n                    }\r\n                  })\r\n                }\r\n              }\r\n            })\r\n        },\r\n\r\n        verificarSiEstaEnLista(id){\r\n          return this.productos.findIndex(producto => producto.id === id)\r\n        },\r\n\r\n        aumentarCantidad(indice){\r\n          let lista = this.productos\r\n          let producto = lista[indice]\r\n          producto.cantidad ++\r\n          this.productos = lista\r\n\r\n        },\r\n\r\n        calcularTotal(){\r\n          let total = 0\r\n          this.productos.forEach(producto =>{\r\n            total = parseFloat(producto.cantidad * producto.precio) + parseFloat(total)\r\n          })\r\n          return total\r\n        }\r\n      }\r\n    }\r\n  </script>"]},"metadata":{},"sourceType":"module"}