{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BusquedaEnFecha from '../Extras/BusquedaEnFecha';\nimport MensajeInicial from '../Extras/MensajeInicial';\nimport CartasTotales from '../Extras/CartasTotales';\nimport HttpService from '../../Servicios/HttpService';\nimport Utiles from '../../Servicios/Utiles';\nimport TablaCuentasApartados from './TablaCuentasApartados';\nimport ComprobanteCompra from './ComprobanteCompra';\nexport default {\n  name: \"ReporteCuentas\",\n  components: {\n    BusquedaEnFecha: BusquedaEnFecha,\n    TablaCuentasApartados: TablaCuentasApartados,\n    MensajeInicial: MensajeInicial,\n    CartasTotales: CartasTotales,\n    ComprobanteCompra: ComprobanteCompra\n  },\n  data: function data() {\n    return {\n      filtros: {\n        fechaInicio: \"\",\n        fechaFin: \"\"\n      },\n      cargando: false,\n      cuentas: [],\n      totalesGenerales: [],\n      cuentaSeleccionada: null,\n      mostrarComprobante: false\n    };\n  },\n  mounted: function mounted() {\n    this.obtenerCuentas();\n  },\n  methods: {\n    onImpreso: function onImpreso(resultado) {\n      this.mostrarComprobante = resultado;\n    },\n    onGenerarComprobante: function onGenerarComprobante(cuenta) {\n      this.cuentaSeleccionada = cuenta;\n      this.mostrarComprobante = true;\n    },\n    onLiquidar: function onLiquidar(cuenta) {\n      var _this = this;\n\n      this.$buefy.dialog.confirm({\n        message: '¿Liquidar cuenta? El cliente debe pagar: $' + cuenta.porPagar,\n        cancelText: 'Cancelar',\n        confirmText: 'Liquidar',\n        onConfirm: function onConfirm() {\n          _this.cargando = true;\n          HttpService.registrar('vender.php', {\n            accion: 'abonar',\n            total: cuenta.porPagar,\n            id: cuenta.id\n          }).then(function (resultado) {\n            if (resultado) {\n              _this.cargando = false;\n\n              _this.$buefy.toast.open(\"Cuenta liquidada\");\n\n              _this.obtenerCuentas();\n            }\n          });\n        }\n      });\n    },\n    onAbonar: function onAbonar(cuenta) {\n      var _this2 = this;\n\n      this.$buefy.dialog.prompt({\n        message: \"Escribe el total del abono. Restan: $\" + cuenta.porPagar,\n        cancelText: 'Cancelar',\n        confirmText: 'Abonar',\n        inputAttrs: {\n          type: 'number',\n          placeholder: 'Abono',\n          value: '',\n          min: 1,\n          max: cuenta.porPagar\n        },\n        trapFocus: true,\n        onConfirm: function onConfirm(value) {\n          _this2.cargando = true;\n          HttpService.registrar('vender.php', {\n            accion: 'abonar',\n            total: value,\n            id: cuenta.id\n          }).then(function (resultado) {\n            if (resultado) {\n              _this2.cargando = false;\n\n              _this2.$buefy.toast.open(\"Abono registrado\");\n\n              _this2.obtenerCuentas();\n            }\n          });\n        }\n      });\n    },\n    onBusquedaEnFecha: function onBusquedaEnFecha(fechas) {\n      this.filtros.fechaInicio = fechas[0].toISOString().split('T')[0];\n      this.filtros.fechaFin = fechas[1].toISOString().split('T')[0];\n      this.obtenerCuentas();\n    },\n    obtenerCuentas: function obtenerCuentas() {\n      var _this3 = this;\n\n      this.cargando = true;\n      var payload = {\n        filtros: this.filtros,\n        accion: 'obtener_cuentas'\n      };\n      HttpService.obtenerConConsultas('vender.php', payload).then(function (resultado) {\n        _this3.cuentas = resultado.cuentas;\n        _this3.totalesGenerales = [{\n          nombre: \"# Cuentas\",\n          total: _this3.cuentas.length,\n          icono: \"wallet\",\n          clase: \"has-text-primary\"\n        }, {\n          nombre: \"Total \",\n          total: '$' + resultado.totalCuentas,\n          icono: \"cash-fast\",\n          clase: \"has-text-success\"\n        }, {\n          nombre: \"Por pagar\",\n          total: '$' + resultado.totalPorPagar,\n          icono: \"alert\",\n          clase: \"has-text-danger\"\n        }, {\n          nombre: \"Pagos\",\n          total: '$' + resultado.totalPagos,\n          icono: \"account-cash\",\n          clase: \"has-text-grey-light\"\n        }, {\n          nombre: \"# Productos\",\n          total: Utiles.calcularProductosVendidos(_this3.cuentas),\n          icono: \"package-variant\",\n          clase: \"has-text-warning\"\n        }, {\n          nombre: \"Ganancia\",\n          total: '$' + Utiles.calcularTotalGanancia(_this3.cuentas),\n          icono: \"currency-usd\",\n          clase: \"has-text-info\"\n        }];\n        _this3.cargando = false;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA,sBADA;EAEAC;IAAAC;IAAAC;IAAAC;IAAAC;IAAAC;EAAA,CAFA;EAIAC;IAAA;MACAC;QACAC,eADA;QAEAC;MAFA,CADA;MAKAC,eALA;MAMAC,WANA;MAOAC,oBAPA;MAQAC,wBARA;MASAC;IATA;EAAA,CAJA;EAgBAC,OAhBA,qBAgBA;IACA;EACA,CAlBA;EAoBAC;IACAC,SADA,qBACAC,SADA,EACA;MACA;IACA,CAHA;IAKAC,oBALA,gCAKAC,MALA,EAKA;MACA;MACA;IACA,CARA;IAUAC,UAVA,sBAUAD,MAVA,EAUA;MAAA;;MACA;QACAE,uEADA;QAEAC,sBAFA;QAGAC,uBAHA;QAIAC;UACA;UACAC;YACAC,gBADA;YAEAC,sBAFA;YAGAC;UAHA,GAKAC,IALA,CAKA;YACA;cACA;;cACA;;cACA;YACA;UACA,CAXA;QAYA;MAlBA;IAoBA,CA/BA;IAiCAC,QAjCA,oBAiCAX,MAjCA,EAiCA;MAAA;;MACA;QACAE,kEADA;QAEAC,sBAFA;QAGAC,qBAHA;QAIAQ;UACAC,cADA;UAEAC,oBAFA;UAGAC,SAHA;UAIAC,MAJA;UAKAC;QALA,CAJA;QAWAC,eAXA;QAYAb;UACA;UACAC;YACAC,gBADA;YAEAC,YAFA;YAGAC;UAHA,GAKAC,IALA,CAKA;YACA;cACA;;cACA;;cACA;YACA;UACA,CAXA;QAYA;MA1BA;IA4BA,CA9DA;IAgEAS,iBAhEA,6BAgEAC,MAhEA,EAgEA;MACA;MACA;MACA;IACA,CApEA;IAsEAC,cAtEA,4BAsEA;MAAA;;MACA;MACA;QACAlC,qBADA;QAEAoB;MAFA;MAIAD,uDACAI,IADA,CACA;QACA;QAEA,2BACA;UAAAY;UAAAd;UAAAe;UAAAC;QAAA,CADA,EAEA;UAAAF;UAAAd;UAAAe;UAAAC;QAAA,CAFA,EAGA;UAAAF;UAAAd;UAAAe;UAAAC;QAAA,CAHA,EAIA;UAAAF;UAAAd;UAAAe;UAAAC;QAAA,CAJA,EAKA;UAAAF;UAAAd;UAAAe;UAAAC;QAAA,CALA,EAMA;UAAAF;UAAAd;UAAAe;UAAAC;QAAA,CANA;QAQA;MACA,CAbA;IAcA;EA1FA;AApBA","names":["name","components","BusquedaEnFecha","TablaCuentasApartados","MensajeInicial","CartasTotales","ComprobanteCompra","data","filtros","fechaInicio","fechaFin","cargando","cuentas","totalesGenerales","cuentaSeleccionada","mostrarComprobante","mounted","methods","onImpreso","resultado","onGenerarComprobante","cuenta","onLiquidar","message","cancelText","confirmText","onConfirm","HttpService","accion","total","id","then","onAbonar","inputAttrs","type","placeholder","value","min","max","trapFocus","onBusquedaEnFecha","fechas","obtenerCuentas","nombre","icono","clase"],"sourceRoot":"src/components/Ventas","sources":["ReporteCuentas.vue"],"sourcesContent":["<template>\r\n    <section>\r\n        <p class=\"title is-1\">Reporte de cuentas</p> \r\n         <b-breadcrumb\r\n            align=\"is-left\"\r\n        >\r\n            <b-breadcrumb-item tag='router-link' to=\"/\">Inicio</b-breadcrumb-item>\r\n            <b-breadcrumb-item active>Cuentas</b-breadcrumb-item>\r\n        </b-breadcrumb>\r\n        <busqueda-en-fecha @seleccionada=\"onBusquedaEnFecha\"/>\r\n        <mensaje-inicial class=\"mt-2\" :titulo=\"'No se han encontrado cuentas :('\" :subtitulo=\"'Aquí aparecerán las cuentas registradas'\" v-if=\"cuentas.length<1\"/>\r\n        <div class=\"mt-2\" v-if=\"cuentas.length>0\">\r\n            <cartas-totales :totales=\"totalesGenerales\" />\r\n            <tabla-cuentas-apartados :datos=\"cuentas\" @abonar=\"onAbonar\" @liquidar=\"onLiquidar\" @imprimir=\"onGenerarComprobante\"/>\r\n        </div>\r\n        <comprobante-compra :venta=\"this.cuentaSeleccionada\" :tipo=\"'cuenta'\" @impreso=\"onImpreso\" v-if=\"mostrarComprobante\" />\r\n        <b-loading :is-full-page=\"true\" v-model=\"cargando\" :can-cancel=\"false\"></b-loading>\r\n    </section>\r\n</template>\r\n<script>\r\n    import BusquedaEnFecha from '../Extras/BusquedaEnFecha'\r\n    import MensajeInicial from '../Extras/MensajeInicial'\r\n    import CartasTotales from '../Extras/CartasTotales'\r\n    import HttpService from '../../Servicios/HttpService'\r\n    import Utiles from '../../Servicios/Utiles'\r\n    import TablaCuentasApartados from './TablaCuentasApartados'\r\n    import ComprobanteCompra from './ComprobanteCompra'\r\n\r\n    export default {\r\n        name: \"ReporteCuentas\",\r\n        components: { BusquedaEnFecha, TablaCuentasApartados, MensajeInicial, CartasTotales, ComprobanteCompra },\r\n\r\n        data:()=>({\r\n            filtros: {\r\n                fechaInicio: \"\",\r\n                fechaFin: \"\"\r\n            },\r\n            cargando: false,\r\n            cuentas: [],\r\n            totalesGenerales: [],\r\n            cuentaSeleccionada: null,\r\n            mostrarComprobante: false\r\n        }),\r\n\r\n        mounted(){\r\n            this.obtenerCuentas()\r\n        },\r\n\r\n        methods: {\r\n            onImpreso(resultado){\r\n                this.mostrarComprobante = resultado\r\n            },\r\n            \r\n            onGenerarComprobante(cuenta){\r\n                this.cuentaSeleccionada = cuenta\r\n                this.mostrarComprobante = true\r\n            },\r\n\r\n            onLiquidar(cuenta) {\r\n                this.$buefy.dialog.confirm({\r\n                    message: '¿Liquidar cuenta? El cliente debe pagar: $' + cuenta.porPagar,\r\n                    cancelText: 'Cancelar',\r\n                    confirmText: 'Liquidar',\r\n                    onConfirm: () => {\r\n                        this.cargando = true\r\n                        HttpService.registrar('vender.php',{\r\n                            accion: 'abonar',\r\n                            total: cuenta.porPagar,\r\n                            id: cuenta.id\r\n                        })\r\n                        .then(resultado =>{\r\n                            if(resultado){\r\n                                this.cargando = false\r\n                                this.$buefy.toast.open(`Cuenta liquidada`)\r\n                                this.obtenerCuentas()\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n\r\n            onAbonar(cuenta) {\r\n                this.$buefy.dialog.prompt({\r\n                    message: `Escribe el total del abono. Restan: $` + cuenta.porPagar,\r\n                    cancelText: 'Cancelar',\r\n                    confirmText: 'Abonar',\r\n                    inputAttrs: {\r\n                        type: 'number',\r\n                        placeholder: 'Abono',\r\n                        value: '',\r\n                        min: 1,\r\n                        max: cuenta.porPagar\r\n                    },\r\n                    trapFocus: true,\r\n                    onConfirm: (value) => {\r\n                        this.cargando = true\r\n                        HttpService.registrar('vender.php',{\r\n                            accion: 'abonar',\r\n                            total: value,\r\n                            id: cuenta.id\r\n                        })\r\n                        .then(resultado =>{\r\n                            if(resultado){\r\n                                this.cargando = false\r\n                                this.$buefy.toast.open(`Abono registrado`)\r\n                                this.obtenerCuentas()\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n            \r\n            onBusquedaEnFecha(fechas){\r\n                this.filtros.fechaInicio = fechas[0].toISOString().split('T')[0]\r\n                this.filtros.fechaFin = fechas[1].toISOString().split('T')[0]\r\n                this.obtenerCuentas()\r\n            },\r\n\r\n            obtenerCuentas(){\r\n                this.cargando = true\r\n                let payload = {\r\n                    filtros: this.filtros,\r\n                    accion: 'obtener_cuentas'\r\n                }\r\n                HttpService.obtenerConConsultas('vender.php', payload)\r\n                .then(resultado => {\r\n                    this.cuentas = resultado.cuentas\r\n\r\n                    this.totalesGenerales = [\r\n                        {nombre: \"# Cuentas\", total: this.cuentas.length, icono: \"wallet\", clase: \"has-text-primary\"},\r\n                        {nombre: \"Total \", total: '$' + resultado.totalCuentas, icono: \"cash-fast\", clase: \"has-text-success\"},\r\n                        {nombre: \"Por pagar\", total: '$' + resultado.totalPorPagar, icono: \"alert\", clase: \"has-text-danger\"},\r\n                        {nombre: \"Pagos\", total: '$' + resultado.totalPagos, icono: \"account-cash\", clase: \"has-text-grey-light\"},\r\n                        {nombre: \"# Productos\", total: Utiles.calcularProductosVendidos(this.cuentas), icono: \"package-variant\", clase: \"has-text-warning\"},\r\n                        {nombre: \"Ganancia\", total: '$' + Utiles.calcularTotalGanancia(this.cuentas), icono: \"currency-usd\", clase: \"has-text-info\"}\r\n                    ]\r\n                    this.cargando = false\r\n                })\r\n            }\r\n        }\r\n    }\r\n</script>"]},"metadata":{},"sourceType":"module"}