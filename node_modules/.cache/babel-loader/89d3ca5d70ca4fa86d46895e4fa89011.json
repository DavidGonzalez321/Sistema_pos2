{"ast":null,"code":"import _regeneratorRuntime from \"C:/xampp/htdocs/pos/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/pos/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Utiles from '../../Servicios/Utiles';\nimport AyudanteSesion from '../../Servicios/AyudanteSesion';\nimport HttpService from '../../Servicios/HttpService';\nimport ErroresComponent from '../Extras/ErroresComponent';\nexport default {\n  name: \"CambiarPassword\",\n  components: {\n    ErroresComponent: ErroresComponent\n  },\n  data: function data() {\n    return {\n      password: {\n        passwordActual: \"\",\n        passwordNueva: \"\",\n        passwordRepetida: \"\"\n      },\n      mensajesErrores: [],\n      cargando: false\n    };\n  },\n  methods: {\n    registrar: function registrar() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var verificaPass, passwordValida;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this.mensajesErrores = [];\n                _this.mensajesErrores = Utiles.validarDatos(_this.password);\n                _context2.next = 4;\n                return _this.verificarPasswordActual();\n\n              case 4:\n                verificaPass = _context2.sent;\n                if (!verificaPass) _this.mensajesErrores.push(\"La contraseña actual ingresada es incorrecta\");\n                if (_this.password.passwordNueva !== _this.password.passwordRepetida) _this.mensajesErrores.push(\"La contraseña repetida no coincide con la nueva\");\n                passwordValida = _this.validarPassword(_this.password.passwordNueva);\n                if (!passwordValida) _this.mensajesErrores.push(\"La contraseña nueva debe ser válida\");\n\n                if (!(_this.mensajesErrores.length > 0)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 11:\n                _this.$buefy.dialog.confirm({\n                  message: '¿Seguro que deseas cambiar la contraseña?',\n                  confirmText: 'Sí, cambiar',\n                  cancelText: 'Cancelar',\n                  onConfirm: function () {\n                    var _onConfirm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                      var resultado;\n                      return _regeneratorRuntime().wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _this.cargando = true;\n                              _context.next = 3;\n                              return HttpService.registrar('usuarios.php', {\n                                accion: 'cambiar_password',\n                                idUsuario: AyudanteSesion.obtenerDatosSesion().id,\n                                password: _this.password.passwordRepetida\n                              });\n\n                            case 3:\n                              resultado = _context.sent;\n\n                              if (resultado) {\n                                _this.$buefy.toast.open('Contraseña actualizada');\n\n                                _this.cargando = false;\n                              }\n\n                              console.log(resultado);\n\n                            case 6:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n\n                    function onConfirm() {\n                      return _onConfirm.apply(this, arguments);\n                    }\n\n                    return onConfirm;\n                  }()\n                });\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    verificarPasswordActual: function verificarPasswordActual() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var paylaod;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                paylaod = {\n                  accion: \"verificar_password\",\n                  idUsuario: AyudanteSesion.obtenerDatosSesion().id,\n                  password: _this2.password.passwordActual\n                };\n                _context3.next = 3;\n                return HttpService.obtenerConConsultas('usuarios.php', paylaod);\n\n              case 3:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    validarPassword: function validarPassword(password) {\n      var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/;\n      return re.test(password);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AAEA;EACAA,uBADA;EAEAC;IAAAC;EAAA,CAFA;EAIAC;IAAA;MACAC;QACAC,kBADA;QAEAC,iBAFA;QAGAC;MAHA,CADA;MAOAC,mBAPA;MAQAC;IARA;EAAA,CAJA;EAeAC;IACAC,SADA,uBACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACA;gBACA;gBAFA;gBAAA,OAGA,+BAHA;;cAAA;gBAGAC,YAHA;gBAIA;gBACA;gBACAC,cANA,GAMA,mDANA;gBAOA;;gBAPA,MAQA,gCARA;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBAUA;kBACAC,oDADA;kBAEAC,0BAFA;kBAGAC,sBAHA;kBAIAC;oBAAA;sBAAA;sBAAA;wBAAA;0BAAA;4BAAA;8BACA;8BADA;8BAAA,OAEAC;gCACAC,0BADA;gCAEAC,iDAFA;gCAGAhB;8BAHA,EAFA;;4BAAA;8BAEAiB,SAFA;;8BAOA;gCACA;;gCACA;8BACA;;8BACAC;;4BAXA;4BAAA;8BAAA;0BAAA;wBAAA;sBAAA;oBAAA;;oBAAA;sBAAA;oBAAA;;oBAAA;kBAAA;gBAJA;;cAVA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IA8BA,CA/BA;IAiCAC,uBAjCA,qCAiCA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAC,OADA,GACA;kBACAL,4BADA;kBAEAC,iDAFA;kBAGAhB;gBAHA,CADA;gBAAA;gBAAA,OAOAc,wDAPA;;cAAA;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAQA,CAzCA;IA2CAO,eA3CA,2BA2CArB,QA3CA,EA2CA;MACA;MACA;IACA;EA9CA;AAfA","names":["name","components","ErroresComponent","data","password","passwordActual","passwordNueva","passwordRepetida","mensajesErrores","cargando","methods","registrar","verificaPass","passwordValida","message","confirmText","cancelText","onConfirm","HttpService","accion","idUsuario","resultado","console","verificarPasswordActual","paylaod","validarPassword"],"sourceRoot":"src/components/Usuarios","sources":["CambiarPassword.vue"],"sourcesContent":["<template>\r\n    <section>\r\n        <b-field label=\"Escribe la contraseña actual\">\r\n            <b-input type=\"password\"\r\n            placeholder=\"Contraseña actual\"\r\n            password-reveal\r\n            v-model=\"password.passwordActual\">\r\n        </b-input>\r\n    </b-field>\r\n    <b-field label=\"Escribe la contraseña nueva\" message=\"Al menos un número, Al menos una mayúscula, Al menos una minúscula, Mínimo 8 caracteres\">\r\n        <b-input type=\"password\"\r\n        placeholder=\"Contraseña nueva\"\r\n        password-reveal\r\n        v-model=\"password.passwordNueva\">\r\n        </b-input>\r\n    </b-field>\r\n    <b-field label=\"Repite la nueva contraseña\">\r\n        <b-input type=\"password\"\r\n        placeholder=\"Repite nueva contraseña\"\r\n        password-reveal\r\n        v-model=\"password.passwordRepetida\">\r\n    </b-input>\r\n    </b-field>\r\n    <div class=\"buttons has-text-centered\">\r\n        <b-button type=\"is-primary\" size=\"is-large\" icon-left=\"check\" @click=\"registrar\">Cambiar contraseña</b-button>\r\n        <b-button type=\"is-dark\" size=\"is-large\" icon-left=\"cancel\" tag=\"router-link\" to=\"/perfil\">Cancelar</b-button>\r\n    </div>\r\n    <errores-component :errores=\"mensajesErrores\" v-if=\"mensajesErrores.length > 0\" />\r\n    <b-loading :is-full-page=\"true\" v-model=\"cargando\" :can-cancel=\"false\"></b-loading>\r\n</section>\r\n</template>\r\n<script>\r\n    import Utiles from '../../Servicios/Utiles'\r\n    import AyudanteSesion from '../../Servicios/AyudanteSesion'\r\n    import HttpService from '../../Servicios/HttpService'\r\n    import ErroresComponent from '../Extras/ErroresComponent'\r\n\r\n    export default {\r\n        name: \"CambiarPassword\",\r\n        components: { ErroresComponent },\r\n\r\n        data:()=>({\r\n            password: {\r\n                passwordActual: \"\",\r\n                passwordNueva: \"\",\r\n                passwordRepetida: \"\",\r\n                \r\n            },\r\n            mensajesErrores: [],\r\n            cargando: false\r\n        }),\r\n\r\n        methods: {\r\n            async registrar(){\r\n                this.mensajesErrores = []\r\n                this.mensajesErrores = Utiles.validarDatos(this.password)\r\n                let verificaPass = await this.verificarPasswordActual()\r\n                if(!verificaPass) this.mensajesErrores.push(\"La contraseña actual ingresada es incorrecta\")\r\n                    if(this.password.passwordNueva !== this.password.passwordRepetida) this.mensajesErrores.push(\"La contraseña repetida no coincide con la nueva\")\r\n                        let passwordValida = this.validarPassword(this.password.passwordNueva)\r\n                    if(!passwordValida) this.mensajesErrores.push(\"La contraseña nueva debe ser válida\")\r\n                        if(this.mensajesErrores.length > 0) return\r\n\r\n                            this.$buefy.dialog.confirm({\r\n                                message: '¿Seguro que deseas cambiar la contraseña?',\r\n                                confirmText: 'Sí, cambiar',\r\n                                cancelText: 'Cancelar',\r\n                                onConfirm: async() => {\r\n                                    this.cargando = true\r\n                                    let resultado = await HttpService.registrar('usuarios.php',{\r\n                                        accion: 'cambiar_password',\r\n                                        idUsuario: AyudanteSesion.obtenerDatosSesion().id,\r\n                                        password: this.password.passwordRepetida\r\n                                    })\r\n                                    if(resultado){\r\n                                        this.$buefy.toast.open('Contraseña actualizada')\r\n                                        this.cargando = false\r\n                                    }\r\n                                    console.log(resultado)\r\n                                    \r\n                                }\r\n                            })\r\n\r\n                    },\r\n\r\n                    async verificarPasswordActual(){\r\n                        let paylaod = {\r\n                            accion: \"verificar_password\",\r\n                            idUsuario: AyudanteSesion.obtenerDatosSesion().id,\r\n                            password: this.password.passwordActual\r\n                        }\r\n\r\n                        return await HttpService.obtenerConConsultas('usuarios.php', paylaod)\r\n                    },\r\n\r\n                    validarPassword (password) {\r\n                        var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/;\r\n                        return re.test(password);\r\n                    }\r\n\r\n\r\n                }\r\n            }\r\n        </script>"]},"metadata":{},"sourceType":"module"}