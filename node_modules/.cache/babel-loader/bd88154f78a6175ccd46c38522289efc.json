{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport HttpService from '../../Servicios/HttpService';\nimport Utiles from '../../Servicios/Utiles';\nimport ErroresComponent from '../Extras/ErroresComponent';\nexport default {\n  name: \"FormProducto\",\n  props: ['productoProp'],\n  components: {\n    ErroresComponent: ErroresComponent\n  },\n  data: function data() {\n    return {\n      categorias: [],\n      marcas: [],\n      producto: {\n        codigo: \"\",\n        nombre: \"\",\n        precioCompra: \"\",\n        precioVenta: \"\",\n        existencia: 0,\n        vendidoMayoreo: false,\n        precioMayoreo: \"\",\n        cantidadMayoreo: 0,\n        categoria: \"\",\n        marca: \"\"\n      },\n      mensajesError: []\n    };\n  },\n  mounted: function mounted() {\n    this.obtenerCategorias();\n    this.obtenerMarcas();\n    this.producto = this.productoProp;\n    this.producto.vendidoMayoreo = this.productoProp.vendidoMayoreo === 1 ? true : false;\n    this.producto.cantidadMayoreo = parseInt(this.productoProp.cantidadMayoreo);\n  },\n  methods: {\n    registrar: function registrar() {\n      var producto = {\n        \"Código\": this.producto.codigo,\n        \"Nombre\": this.producto.nombre,\n        \"Precio compra\": this.producto.precioCompra,\n        \"Precio venta\": this.producto.precioVenta,\n        \"Existencia\": this.producto.existencia\n      };\n      this.mensajesError = Utiles.validarDatos(producto);\n\n      if (parseFloat(this.producto.precioVenta) < parseFloat(this.producto.precioCompra)) {\n        this.mensajesError.push(\"El precio de venta debe ser mayor al precio compra\");\n      }\n\n      if (this.mensajesError.length > 0) return;\n      this.$emit(\"registrado\", this.producto);\n      this.producto = {\n        codigo: \"\",\n        nombre: \"\",\n        precioCompra: \"\",\n        precioVenta: \"\",\n        existencia: 0,\n        vendidoMayoreo: false,\n        precioMayoreo: \"\",\n        cantidadMayoreo: 0,\n        categoria: \"\",\n        marca: \"\"\n      };\n    },\n    obtenerMarcas: function obtenerMarcas() {\n      var _this = this;\n\n      var payload = {\n        accion: 'obtener'\n      };\n      HttpService.obtenerConConsultas('marcas.php', payload).then(function (marcas) {\n        _this.marcas = marcas;\n      });\n    },\n    obtenerCategorias: function obtenerCategorias() {\n      var _this2 = this;\n\n      var payload = {\n        accion: 'obtener'\n      };\n      HttpService.obtenerConConsultas('categorias.php', payload).then(function (categorias) {\n        _this2.categorias = categorias;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA;AACA;AACA;EACAA,oBADA;EAEAC,uBAFA;EAGAC;IAAAC;EAAA,CAHA;EAKAC;IAAA;MACAC,cADA;MAEAC,UAFA;MAGAC;QACAC,UADA;QAEAC,UAFA;QAGAC,gBAHA;QAIAC,eAJA;QAKAC,aALA;QAMAC,qBANA;QAOAC,iBAPA;QAQAC,kBARA;QASAC,aATA;QAUAC;MAVA,CAHA;MAeAC;IAfA;EAAA,CALA;EAuBAC,OAvBA,qBAuBA;IACA;IACA;IACA;IACA;IACA;EACA,CA7BA;EA+BAC;IAEAC,SAFA,uBAEA;MACA;QACA,8BADA;QAEA,8BAFA;QAGA,2CAHA;QAIA,yCAJA;QAKA;MALA;MAOA;;MACA;QACA;MACA;;MACA;MACA;MACA;QACAb,UADA;QAEAC,UAFA;QAGAC,gBAHA;QAIAC,eAJA;QAKAC,aALA;QAMAC,qBANA;QAOAC,iBAPA;QAQAC,kBARA;QASAC,aATA;QAUAC;MAVA;IAYA,CA5BA;IA8BAK,aA9BA,2BA8BA;MAAA;;MACA;QACAC;MADA;MAGAC,uDACAC,IADA,CACA;QACA;MACA,CAHA;IAIA,CAtCA;IAwCAC,iBAxCA,+BAwCA;MAAA;;MACA;QACAH;MADA;MAGAC,2DACAC,IADA,CACA;QACA;MACA,CAHA;IAIA;EAhDA;AA/BA","names":["name","props","components","ErroresComponent","data","categorias","marcas","producto","codigo","nombre","precioCompra","precioVenta","existencia","vendidoMayoreo","precioMayoreo","cantidadMayoreo","categoria","marca","mensajesError","mounted","methods","registrar","obtenerMarcas","accion","HttpService","then","obtenerCategorias"],"sourceRoot":"src/components/Inventario","sources":["FormProducto.vue"],"sourcesContent":["<template>\r\n    <section class=\"box\">\r\n        <b-field grouped group-multiline>\r\n            <b-field label=\"Código de barras\" expanded>\r\n                <b-input type=\"number\" icon=\"barcode\" placeholder=\"Código de barras\" v-model=\"producto.codigo\"></b-input>\r\n            </b-field>\r\n            <b-field label=\"Nombre\" expanded>\r\n                <b-input placeholder=\"Nombre o descripción del producto\" v-model=\"producto.nombre\"></b-input>\r\n            </b-field>\r\n        </b-field>\r\n\r\n        <b-field grouped group-multiline>\r\n            <b-field label=\"Precio compra\" expanded>\r\n                <b-input step=\"any\" icon=\"currency-usd\" type=\"number\" placeholder=\"Precio de compra\" v-model=\"producto.precioCompra\"></b-input>\r\n            </b-field>\r\n\r\n            <b-field label=\"Precio venta\" expanded>\r\n                <b-input step=\"any\" icon=\"currency-usd\" type=\"number\" placeholder=\"Precio de venta\" v-model=\"producto.precioVenta\" :min=\"producto.precioCompra\"></b-input>\r\n            </b-field>\r\n            \r\n            <b-field label=\"Existencia\" expanded>\r\n                <b-numberinput min=\"1\" type=\"is-info\" placeholder=\"Existencia\" v-model=\"producto.existencia\">\r\n                </b-numberinput>\r\n            </b-field>\r\n        </b-field>\r\n        <br>\r\n        <b-field grouped group-multiline>\r\n            <b-field>\r\n                <b-switch v-model=\"producto.vendidoMayoreo\"\r\n                type=\"is-info\">\r\n                    ¿Vendido al mayoreo?\r\n                </b-switch>\r\n            </b-field>\r\n\r\n            <b-field label=\"Precio mayoreo\" expanded v-if=\"producto.vendidoMayoreo\">\r\n                <b-input step=\"any\" icon=\"currency-usd\" type=\"number\" placeholder=\"Precio de venta al mayoreo\" v-model=\"producto.precioMayoreo\" :min=\"producto.precioCompra\"></b-input>\r\n            </b-field>\r\n            \r\n            <b-field label=\"Cantidad mayoreo\" expanded v-if=\"producto.vendidoMayoreo\">\r\n                <b-numberinput min=\"1\" type=\"is-info\" placeholder=\"Cantidad para aplicar mayoreo\" v-model=\"producto.cantidadMayoreo\">\r\n                </b-numberinput>\r\n            </b-field>\r\n        </b-field>\r\n        <br>\r\n        <b-field grouped group-multiline>\r\n            <b-field label=\"Selecciona una marca\" >\r\n                <b-select placeholder=\"Marca\" icon=\"tag-multiple\" v-model=\"producto.marca\">\r\n                    <option v-for=\"marca in marcas\" :key=\"marca.id\" :value=\"marca.id\">\r\n                        {{ marca.nombreMarca }}\r\n                    </option>\r\n                </b-select>\r\n            </b-field>\r\n\r\n            <b-field label=\"Selecciona una categoría\" >\r\n                <b-select placeholder=\"Categoría\" icon=\"archive\" v-model=\"producto.categoria\">\r\n                    <option v-for=\"categoria in categorias\" :key=\"categoria.id\" :value=\"categoria.id\">\r\n                        {{ categoria.nombreCategoria }}\r\n                    </option>\r\n                </b-select>\r\n            </b-field>\r\n        </b-field>\r\n        <br>\r\n        <div class=\"buttons has-text-centered\">\r\n            <b-button type=\"is-primary\" size=\"is-large\" icon-left=\"check\" @click=\"registrar\">Registrar</b-button>\r\n            <b-button type=\"is-dark\" size=\"is-large\" icon-left=\"cancel\" tag=\"router-link\" to=\"/inventario\">Cancelar</b-button>\r\n        </div>\r\n        <errores-component :errores=\"mensajesError\" v-if=\"mensajesError.length > 0\"/>\r\n    </section>\r\n</template>\r\n<script >\r\n    import HttpService from '../../Servicios/HttpService'\r\n    import Utiles from '../../Servicios/Utiles'\r\n    import ErroresComponent from '../Extras/ErroresComponent'\r\n    export default{\r\n        name: \"FormProducto\",\r\n        props: ['productoProp'],\r\n        components: { ErroresComponent },\r\n\r\n        data:()=>({\r\n            categorias: [],\r\n            marcas: [],\r\n            producto: {\r\n                codigo: \"\",\r\n                nombre: \"\",\r\n                precioCompra: \"\",\r\n                precioVenta: \"\",\r\n                existencia: 0,\r\n                vendidoMayoreo: false,\r\n                precioMayoreo: \"\",\r\n                cantidadMayoreo: 0,\r\n                categoria: \"\",\r\n                marca:\"\"\r\n            },\r\n            mensajesError: []\r\n        }),\r\n\r\n        mounted(){\r\n            this.obtenerCategorias()\r\n            this.obtenerMarcas()\r\n            this.producto = this.productoProp\r\n            this.producto.vendidoMayoreo = (this.productoProp.vendidoMayoreo === 1) ? true : false\r\n            this.producto.cantidadMayoreo = parseInt(this.productoProp.cantidadMayoreo)\r\n        },\r\n\r\n        methods: {\r\n\r\n        registrar() {\r\n            let producto = {\r\n                \"Código\": this.producto.codigo,\r\n                \"Nombre\": this.producto.nombre,\r\n                \"Precio compra\": this.producto.precioCompra,\r\n                \"Precio venta\": this.producto.precioVenta,\r\n                \"Existencia\": this.producto.existencia\r\n            }\r\n            this.mensajesError = Utiles.validarDatos(producto)\r\n            if(parseFloat(this.producto.precioVenta) < parseFloat(this.producto.precioCompra)){\r\n                this.mensajesError.push(\"El precio de venta debe ser mayor al precio compra\")\r\n            }\r\n            if(this.mensajesError.length > 0) return\r\n            this.$emit(\"registrado\", this.producto)\r\n            this.producto= {\r\n                codigo: \"\",\r\n                nombre: \"\",\r\n                precioCompra: \"\",\r\n                precioVenta: \"\",\r\n                existencia: 0,\r\n                vendidoMayoreo: false,\r\n                precioMayoreo: \"\",\r\n                cantidadMayoreo: 0,\r\n                categoria: \"\",\r\n                marca:\"\"\r\n            }\r\n        },\r\n\r\n        obtenerMarcas(){\r\n            let payload = {\r\n              accion: 'obtener'\r\n            }\r\n            HttpService.obtenerConConsultas('marcas.php', payload)\r\n            .then(marcas => {\r\n              this.marcas = marcas\r\n            })\r\n          },\r\n\r\n          obtenerCategorias(){\r\n            let payload = {\r\n              accion: 'obtener'\r\n            }\r\n            HttpService.obtenerConConsultas('categorias.php', payload)\r\n            .then(categorias => {\r\n              this.categorias = categorias\r\n            })\r\n          }\r\n        }\r\n\r\n    }\r\n</script>"]},"metadata":{},"sourceType":"module"}