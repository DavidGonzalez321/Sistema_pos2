{"ast":null,"code":"import _regeneratorRuntime from \"C:/xampp/htdocs/pos/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/pos/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport HttpService from '../../Servicios/HttpService';\nimport NavComponent from '../Extras/NavComponent';\nimport MensajeInicial from '../Extras/MensajeInicial';\nimport CartasTotales from '../Extras/CartasTotales';\nexport default {\n  name: \"ProductosComponent\",\n  components: {\n    NavComponent: NavComponent,\n    MensajeInicial: MensajeInicial,\n    CartasTotales: CartasTotales\n  },\n  data: function data() {\n    return {\n      productos: [],\n      cargando: false,\n      isPaginated: true,\n      isPaginationSimple: false,\n      isPaginationRounded: true,\n      paginationPosition: 'bottom',\n      defaultSortDirection: 'asc',\n      sortIcon: 'arrow-up',\n      sortIconSize: 'is-medium',\n      currentPage: 1,\n      perPage: 5,\n      cartasTotales: []\n    };\n  },\n  mounted: function mounted() {\n    this.obtenerProductos();\n  },\n  methods: {\n    agregarExistencia: function agregarExistencia(producto) {\n      var _this = this;\n\n      this.$buefy.dialog.prompt({\n        message: '¿Cuántas piezas vas a agregar de ' + producto.nombre + '?',\n        cancelText: 'Cancelar',\n        confirmText: 'Agregar',\n        inputAttrs: {\n          type: 'number',\n          placeholder: 'Escribe la cantidad de productos',\n          value: '',\n          min: 1\n        },\n        trapFocus: true,\n        onConfirm: function onConfirm(value) {\n          _this.cargando = true;\n          HttpService.registrar('productos.php', {\n            accion: 'agregar_existencia',\n            cantidad: value,\n            id: producto.id\n          }).then(function (registrado) {\n            if (registrado) {\n              _this.cargando = false;\n\n              _this.$buefy.toast.open(value + ' Productos agregados a ' + producto.nombre);\n\n              _this.obtenerProductos();\n            }\n          });\n        }\n      });\n    },\n    quitarExistencia: function quitarExistencia(producto) {\n      var _this2 = this;\n\n      this.$buefy.dialog.prompt({\n        message: '¿Cuántas piezas vas a quitar de ' + producto.nombre + '?',\n        cancelText: 'Cancelar',\n        confirmText: 'Quitar',\n        inputAttrs: {\n          type: 'number',\n          placeholder: 'Escribe la cantidad de productos',\n          value: '',\n          min: 1\n        },\n        trapFocus: true,\n        onConfirm: function onConfirm(value) {\n          if (value > producto.existencia) {\n            _this2.$buefy.toast.open('No puedes quitar más de ' + producto.existencia + ' productos');\n\n            return;\n          }\n\n          _this2.cargando = true;\n          HttpService.registrar('productos.php', {\n            accion: 'restar_existencia',\n            cantidad: value,\n            id: producto.id\n          }).then(function (registrado) {\n            if (registrado) {\n              _this2.cargando = false;\n\n              _this2.$buefy.toast.open(value + ' Productos quitados a ' + producto.nombre);\n\n              _this2.obtenerProductos();\n            }\n          });\n        }\n      });\n    },\n    eliminar: function eliminar(idProducto) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this3.$buefy.dialog.confirm({\n                  title: 'Eliminar producto',\n                  message: 'Seguro que quieres <b>eliminar</b> este producto? Esta acción no se puede revertir.',\n                  confirmText: 'Sí, eliminar',\n                  cancelText: 'Cancelar',\n                  type: 'is-danger',\n                  hasIcon: true,\n                  onConfirm: function onConfirm() {\n                    _this3.cargando = true;\n                    HttpService.eliminar('productos.php', {\n                      accion: 'eliminar',\n                      id: idProducto\n                    }).then(function (resultado) {\n                      if (!resultado) {\n                        _this3.$buefy.toast.open('Error al eliminar');\n\n                        _this3.cargando = false;\n                        return;\n                      }\n\n                      if (resultado) {\n                        _this3.cargando = false;\n\n                        _this3.$buefy.toast.open({\n                          type: 'is-info',\n                          message: 'Producto eliminado.'\n                        });\n\n                        _this3.obtenerProductos();\n                      }\n                    });\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    editar: function editar(idProducto) {\n      this.$router.push({\n        name: \"EditarProducto\",\n        params: {\n          id: idProducto\n        }\n      });\n    },\n    obtenerProductos: function obtenerProductos() {\n      var _this4 = this;\n\n      this.cargando = true;\n      var payload = {\n        accion: 'obtener'\n      };\n      HttpService.obtenerConConsultas('productos.php', payload).then(function (respuesta) {\n        _this4.productos = respuesta.productos;\n        _this4.cartasTotales = [{\n          nombre: \"Número Productos\",\n          total: _this4.productos.length,\n          icono: \"package-variant-closed\",\n          clase: \"has-text-danger\"\n        }, {\n          nombre: \"Total productos\",\n          total: respuesta.totalProductos,\n          icono: \"chart-bar-stacked\",\n          clase: \"has-text-primary\"\n        }, {\n          nombre: \"Total inventario\",\n          total: '$' + respuesta.totalInventario,\n          icono: \"currency-usd\",\n          clase: \"has-text-success\"\n        }, {\n          nombre: \"Ganancia\",\n          total: '$' + respuesta.gananciaInventario,\n          icono: \"currency-usd\",\n          clase: \"has-text-info\"\n        }];\n        _this4.cargando = false;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;AAEA;EACAA,0BADA;EAEAC;IAAAC;IAAAC;IAAAC;EAAA,CAFA;EAIAC;IAAA;MACAC,aADA;MAEAC,eAFA;MAGAC,iBAHA;MAIAC,yBAJA;MAKAC,yBALA;MAMAC,4BANA;MAOAC,2BAPA;MAQAC,oBARA;MASAC,yBATA;MAUAC,cAVA;MAWAC,UAXA;MAYAC;IAZA;EAAA,CAJA;EAmBAC,OAnBA,qBAmBA;IACA;EACA,CArBA;EAuBAC;IACAC,iBADA,6BACAC,QADA,EACA;MAAA;;MACA;QACAC,oEADA;QAEAC,sBAFA;QAGAC,sBAHA;QAIAC;UACAC,cADA;UAEAC,+CAFA;UAGAC,SAHA;UAIAC;QAJA,CAJA;QAUAC,eAVA;QAWAC;UACA;UACAC;YACAC,4BADA;YAEAC,eAFA;YAGAC;UAHA,GAKAC,IALA,CAKA;YACA;cACA;;cACA;;cACA;YACA;UACA,CAXA;QAaA;MA1BA;IA4BA,CA9BA;IAgCAC,gBAhCA,4BAgCAhB,QAhCA,EAgCA;MAAA;;MACA;QACAC,mEADA;QAEAC,sBAFA;QAGAC,qBAHA;QAIAC;UACAC,cADA;UAEAC,+CAFA;UAGAC,SAHA;UAIAC;QAJA,CAJA;QAUAC,eAVA;QAWAC;UACA;YACA;;YACA;UACA;;UACA;UACAC;YACAC,2BADA;YAEAC,eAFA;YAGAC;UAHA,GAKAC,IALA,CAKA;YACA;cACA;;cACA;;cACA;YACA;UACA,CAXA;QAaA;MA9BA;IAgCA,CAjEA;IAmEAE,QAnEA,oBAmEAC,UAnEA,EAmEA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACA;kBACAC,0BADA;kBAEAlB,8FAFA;kBAGAE,2BAHA;kBAIAD,sBAJA;kBAKAG,iBALA;kBAMAe,aANA;kBAOAV;oBACA;oBACAC;sBACAC,kBADA;sBAEAE;oBAFA,GAIAC,IAJA,CAIA;sBACA;wBACA;;wBACA;wBACA;sBACA;;sBAEA;wBACA;;wBACA;0BACAV,eADA;0BAEAJ;wBAFA;;wBAIA;sBACA;oBACA,CAnBA;kBAoBA;gBA7BA;;cADA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAgCA,CAnGA;IAqGAoB,MArGA,kBAqGAH,UArGA,EAqGA;MACA;QACAvC,sBADA;QAEA2C;UAAAR;QAAA;MAFA;IAIA,CA1GA;IA4GAS,gBA5GA,8BA4GA;MAAA;;MACA;MACA;QACAX;MADA;MAGAD,0DACAI,IADA,CACA;QACA;QAEA,wBACA;UAAAS;UAAAC;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAH;UAAAC;UAAAC;UAAAC;QAAA,CAFA,EAGA;UAAAH;UAAAC;UAAAC;UAAAC;QAAA,CAHA,EAIA;UAAAH;UAAAC;UAAAC;UAAAC;QAAA,CAJA;QAMA;MACA,CAXA;IAYA;EA7HA;AAvBA","names":["name","components","NavComponent","MensajeInicial","CartasTotales","data","productos","cargando","isPaginated","isPaginationSimple","isPaginationRounded","paginationPosition","defaultSortDirection","sortIcon","sortIconSize","currentPage","perPage","cartasTotales","mounted","methods","agregarExistencia","producto","message","cancelText","confirmText","inputAttrs","type","placeholder","value","min","trapFocus","onConfirm","HttpService","accion","cantidad","id","then","quitarExistencia","eliminar","idProducto","title","hasIcon","editar","params","obtenerProductos","nombre","total","icono","clase"],"sourceRoot":"src/components/Inventario","sources":["ProductosComponent.vue"],"sourcesContent":["<template>\r\n    <section>\r\n        <nav-component :titulo=\"'Inventario'\" :link=\"{ path: '/agregar-producto' }\" :texto=\"'Agregar producto'\"/>\r\n        <b-breadcrumb\r\n            align=\"is-left\"\r\n        >\r\n            <b-breadcrumb-item tag='router-link' to=\"/\">Inicio</b-breadcrumb-item>\r\n            <b-breadcrumb-item active>Inventario</b-breadcrumb-item>\r\n        </b-breadcrumb>     \r\n        <mensaje-inicial :titulo=\"'No se han encontrado productos :('\" :subtitulo=\"'Agrega productos pulsando el botón de Agregar productos'\" v-if=\"productos.length<1\"/>\r\n        \r\n        <div v-if=\"productos.length>0\">\r\n            <cartas-totales :totales=\"cartasTotales\" />\r\n            <b-select v-model=\"perPage\">\r\n                <option value=\"5\">5 por página</option>\r\n                <option value=\"10\">10 por página</option>\r\n                <option value=\"15\">15 por página</option>\r\n                <option value=\"20\">20 por página</option>\r\n            </b-select>\r\n\r\n            <b-table\r\n            class=\"box\"\r\n            :data=\"productos\"\r\n            :paginated=\"isPaginated\"\r\n            :per-page=\"perPage\"\r\n            :current-page.sync=\"currentPage\"\r\n            :pagination-simple=\"isPaginationSimple\"\r\n            :pagination-position=\"paginationPosition\"\r\n            :default-sort-direction=\"defaultSortDirection\"\r\n            :pagination-rounded=\"isPaginationRounded\"\r\n            :sort-icon=\"sortIcon\"\r\n            :sort-icon-size=\"sortIconSize\"\r\n            default-sort=\"user.first_name\"\r\n            aria-next-label=\"Next page\"\r\n            aria-previous-label=\"Previous page\"\r\n            aria-page-label=\"Page\"\r\n            aria-current-label=\"Current page\"\r\n            >\r\n              <b-table-column field=\"codigo\" label=\"Código\" sortable searchable v-slot=\"props\">\r\n                    {{ props.row.codigo }}\r\n                </b-table-column>\r\n\r\n                <b-table-column field=\"nombre\" label=\"Nombre\" sortable searchable v-slot=\"props\">\r\n                    {{ props.row.nombre }}\r\n                </b-table-column>\r\n\r\n                <b-table-column field=\"precioCompra\" label=\"Precio compra\" sortable v-slot=\"props\">\r\n                    ${{ props.row.precioCompra }}\r\n                </b-table-column>\r\n\r\n                <b-table-column field=\"precioVenta\" label=\"Precio venta\" sortable v-slot=\"props\">\r\n                    ${{ props.row.precioVenta }}\r\n                </b-table-column>\r\n\r\n                <b-table-column field=\"ganancia\" label=\"Ganacia\" sortable v-slot=\"props\">\r\n                    <b>${{ props.row.precioVenta - props.row.precioCompra }}</b>\r\n                </b-table-column>\r\n\r\n                <b-table-column field=\"vendidoMayoreo\" label=\"¿Mayoreo?\" sortable v-slot=\"props\">\r\n                    <b-tag type=\"is-danger\" v-if=\"!props.row.vendidoMayoreo\">No</b-tag>\r\n\r\n                    <div v-if=\"props.row.vendidoMayoreo\">\r\n                        <b>Precio: </b>${{ props.row.precioMayoreo}}<br>\r\n                        <b>A partir: </b>{{ props.row.cantidadMayoreo}}\r\n                    </div>\r\n                </b-table-column>\r\n\r\n                <b-table-column field=\"existencia\" label=\"Existencia\" sortable v-slot=\"props\">\r\n                    {{ props.row.existencia }}\r\n                </b-table-column>\r\n\r\n                <b-table-column field=\"nombreMarca\" label=\"Marca\" sortable searchable v-slot=\"props\">\r\n                    {{ props.row.nombreMarca }}\r\n                </b-table-column>\r\n\r\n                <b-table-column field=\"nombreCategoria\" label=\"Categoría\" sortable searchable v-slot=\"props\">\r\n                    {{ props.row.nombreCategoria }}\r\n                </b-table-column>\r\n\r\n                <b-table-column field=\"eliminar\" label=\"Eliminar\" v-slot=\"props\">\r\n                    <b-button type=\"is-danger\" @click=\"eliminar(props.row.id)\">\r\n                        <b-icon icon=\"delete\" />\r\n                    </b-button>\r\n                </b-table-column>\r\n\r\n                <b-table-column field=\"editar\" label=\"Editar\" v-slot=\"props\">\r\n                    <b-button type=\"is-info\" @click=\"editar(props.row.id)\">\r\n                        <b-icon icon=\"pen\" />\r\n                    </b-button>\r\n                </b-table-column>\r\n\r\n                <b-table-column field=\"editar\" label=\"Agregar\" v-slot=\"props\">\r\n                    <b-button type=\"is-primary\" @click=\"agregarExistencia(props.row)\">\r\n                        <b-icon icon=\"plus\" />\r\n                    </b-button>\r\n                </b-table-column>\r\n\r\n                <b-table-column field=\"editar\" label=\"Quitar\" v-slot=\"props\">\r\n                    <b-button type=\"is-warning\" @click=\"quitarExistencia(props.row)\">\r\n                        <b-icon icon=\"minus\" />\r\n                    </b-button>\r\n                </b-table-column>\r\n            </b-table>\r\n        </div>\r\n        <b-loading :is-full-page=\"true\" v-model=\"cargando\" :can-cancel=\"false\"></b-loading>\r\n    </section>\r\n</template>\r\n<script>\r\n    import HttpService from '../../Servicios/HttpService'\r\n    import NavComponent from '../Extras/NavComponent'\r\n    import MensajeInicial from '../Extras/MensajeInicial'\r\n    import CartasTotales from '../Extras/CartasTotales'\r\n\r\n    export default {\r\n        name: \"ProductosComponent\",\r\n        components: { NavComponent, MensajeInicial, CartasTotales },\r\n\r\n        data: ()=>({\r\n            productos: [],\r\n            cargando: false,\r\n            isPaginated: true,\r\n            isPaginationSimple: false,\r\n            isPaginationRounded: true,\r\n            paginationPosition: 'bottom',\r\n            defaultSortDirection: 'asc',\r\n            sortIcon: 'arrow-up',\r\n            sortIconSize: 'is-medium',\r\n            currentPage: 1,\r\n            perPage: 5,\r\n            cartasTotales: []\r\n        }),\r\n\r\n        mounted(){\r\n            this.obtenerProductos()\r\n        },\r\n\r\n        methods: {\r\n            agregarExistencia(producto){\r\n               this.$buefy.dialog.prompt({\r\n                   message: '¿Cuántas piezas vas a agregar de ' + producto.nombre + '?',\r\n                   cancelText: 'Cancelar',\r\n                   confirmText: 'Agregar',\r\n                   inputAttrs: {\r\n                       type: 'number',\r\n                       placeholder: 'Escribe la cantidad de productos',\r\n                       value: '',\r\n                       min: 1\r\n                   },\r\n                   trapFocus: true,\r\n                   onConfirm: (value) =>{ \r\n                     this.cargando = true\r\n                     HttpService.registrar('productos.php', {\r\n                        accion: 'agregar_existencia',\r\n                        cantidad: value,\r\n                        id: producto.id\r\n                     })\r\n                     .then(registrado => {\r\n                        if(registrado){\r\n                           this.cargando = false\r\n                           this.$buefy.toast.open(value + ' Productos agregados a ' + producto.nombre)\r\n                           this.obtenerProductos()\r\n                        }\r\n                     })\r\n                    \r\n                  }\r\n               })\r\n            },\r\n\r\n            quitarExistencia(producto){\r\n               this.$buefy.dialog.prompt({\r\n                   message: '¿Cuántas piezas vas a quitar de ' + producto.nombre + '?',\r\n                   cancelText: 'Cancelar',\r\n                   confirmText: 'Quitar',\r\n                   inputAttrs: {\r\n                       type: 'number',\r\n                       placeholder: 'Escribe la cantidad de productos',\r\n                       value: '',\r\n                       min: 1\r\n                   },\r\n                   trapFocus: true,\r\n                   onConfirm: (value) =>{ \r\n                     if(value > producto.existencia){\r\n                        this.$buefy.toast.open('No puedes quitar más de ' + producto.existencia + ' productos')\r\n                        return\r\n                     }\r\n                     this.cargando = true\r\n                     HttpService.registrar('productos.php', {\r\n                        accion: 'restar_existencia',\r\n                        cantidad: value,\r\n                        id: producto.id\r\n                     })\r\n                     .then(registrado => {\r\n                        if(registrado){\r\n                           this.cargando = false\r\n                           this.$buefy.toast.open(value + ' Productos quitados a ' + producto.nombre)\r\n                           this.obtenerProductos()\r\n                        }\r\n                     })\r\n                    \r\n                  }\r\n               })\r\n            },\r\n\r\n            async eliminar(idProducto){\r\n                this.$buefy.dialog.confirm({\r\n                    title: 'Eliminar producto',\r\n                    message: 'Seguro que quieres <b>eliminar</b> este producto? Esta acción no se puede revertir.',\r\n                    confirmText: 'Sí, eliminar',\r\n                    cancelText: 'Cancelar',\r\n                    type: 'is-danger',\r\n                    hasIcon: true,\r\n                    onConfirm: () => {\r\n                        this.cargando = true\r\n                        HttpService.eliminar('productos.php',{\r\n                            accion: 'eliminar',\r\n                            id: idProducto\r\n                        })\r\n                        .then(resultado => {\r\n                            if(!resultado) {\r\n                                this.$buefy.toast.open('Error al eliminar')\r\n                                this.cargando = false\r\n                                return\r\n                            }\r\n\r\n                            if(resultado){\r\n                                this.cargando = false\r\n                                this.$buefy.toast.open({\r\n                                    type: 'is-info',\r\n                                    message: 'Producto eliminado.'\r\n                                })\r\n                                this.obtenerProductos()\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n\r\n            editar(idProducto){\r\n                this.$router.push({\r\n                    name: \"EditarProducto\",\r\n                    params: { id: idProducto}\r\n                })\r\n            },\r\n\r\n            obtenerProductos(){\r\n                this.cargando = true\r\n                let payload = {\r\n                    accion: 'obtener'\r\n                }\r\n                HttpService.obtenerConConsultas('productos.php', payload)\r\n                .then(respuesta => {\r\n                    this.productos = respuesta.productos\r\n\r\n                    this.cartasTotales = [\r\n                        {nombre: \"Número Productos\", total: this.productos.length, icono: \"package-variant-closed\", clase: \"has-text-danger\"},\r\n                        {nombre: \"Total productos\", total: respuesta.totalProductos, icono: \"chart-bar-stacked\", clase: \"has-text-primary\"},\r\n                        {nombre: \"Total inventario\", total: '$' + respuesta.totalInventario, icono: \"currency-usd\", clase: \"has-text-success\"},\r\n                        {nombre: \"Ganancia\", total: '$' + respuesta.gananciaInventario, icono: \"currency-usd\", clase: \"has-text-info\"},\r\n                    ]\r\n                    this.cargando = false\r\n                })\r\n            }\r\n        }\r\n    }\r\n</script>"]},"metadata":{},"sourceType":"module"}